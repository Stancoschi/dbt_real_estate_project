# This workflow automates the CI/CD process for the dbt project.
# It triggers on pushes to the main branch and also runs on a daily schedule.
name: dbt CI/CD

on:
  push:
    branches:
      - main
      - master
  pull_request: # It's a good practice to run tests on Pull Requests as well.
    branches:
      - main
      - master
  schedule:
    # Runs every day at 5:00 AM UTC.
    - cron: '0 5 * * *'

jobs:
  dbt_run_and_test:
    name: Run and Test dbt Models
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # Using a more recent, stable version of Python.

      - name: Install dbt and adapter
        # Pinning the version ensures consistent and predictable runs.
        # It's good practice to align this with your local development version.
        run: pip install dbt-snowflake==1.8.0 

      - name: Install dbt packages/dependencies
        # This command reads `packages.yml` and installs necessary packages like dbt_utils.
        run: dbt deps --profiles-dir .github # Point to the directory containing profiles.yml
        env:
          # Define environment variables that will populate profiles.yml
          # These values are securely fetched from GitHub Secrets.
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE: 'ETL_USER' # Use the dedicated role for automation.
          SNOWFLAKE_DATABASE: 'DBT_REAL_ESTATE_PROJECT_DB'
          SNOWFLAKE_WAREHOUSE: 'COMPUTE_WH'
          # This schema is a default; dbt will use schemas defined in your project config.
          SNOWFLAKE_SCHEMA: 'ANALYTICS' 

      - name: Run dbt models
        # This command will build all models in the project.
        # On the scheduled run, this will execute the incremental logic.
        run: dbt run --profiles-dir .github
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE: 'ETL_USER'
          SNOWFLAKE_DATABASE: 'DBT_REAL_ESTATE_PROJECT_DB'
          SNOWFLAKE_WAREHOUSE: 'COMPUTE_WH'
          SNOWFLAKE_SCHEMA: 'ANALYTICS'

      - name: Test dbt models
        # This command runs all tests defined in your project.
        # If any test fails, the entire workflow will fail, preventing a bad deployment.
        run: dbt test --profiles-dir .github
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE: 'ETL_USER'
          SNOWFLAKE_DATABASE: 'DBT_REAL_ESTATE_PROJECT_DB'
          SNOWFLAKE_WAREHOUSE: 'COMPUTE_WH'
          SNOWFLAKE_SCHEMA: 'ANALYTICS'