# dbt_project.yml

name: 'dbt_real_estate_project'
version: '1.0.0'
config-version: 2

profile: 'dbt_real_estate_project' # Trebuie să corespundă cu profiles.yml

model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

# Configurează materializarea default și schemele pentru diferite subdirectoare
models:
  dbt_real_estate_project: # Numele proiectului tău
    # Configurații globale pentru toate modelele din proiect
    # +materialized: view # Poți seta o materializare default (view, table, incremental)

    staging:
      # Configurații pentru modelele din models/staging/
      +schema: RAW_STAGING # Modelele de staging merg în schema RAW_STAGING
      +materialized: view # Staging-urile sunt de obicei view-uri
      elementix: # Pentru models/staging/elementix/
        +tags: "elementix_source"
      financial: # Pentru models/staging/financial/ (vom crea mai târziu)
        +tags: "financial_source"

    intermediate:
      # Configurații pentru modelele din models/intermediate/
      +schema: RAW_STAGING # Sau o schemă separată ANALYTICS_STAGING dacă vrei
      +materialized: ephemeral # Sau view/table dacă sunt complexe și refolosite des
                              # Ephemeral nu persistă în DB, e doar un CTE
      elementix:
        +tags: "elementix_int"
      financial:
        +tags: "financial_int"

    marts:
      # Configurații pentru modelele din models/marts/
      +schema: ANALYTICS # Modelele de mart merg în schema ANALYTICS
      +materialized: table # Mart-urile sunt de obicei tabele
      elementix:
        +tags: "elementix_mart"
      financial:
        +tags: "financial_mart"
      combined:
        +tags: "combined_mart"